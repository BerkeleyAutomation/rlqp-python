name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@master
      with:
        submodules: 'recursive'

    # - name: Add msbuild to PATH
    #   uses: microsoft/setup-msbuild@v1.0.2
    #   if: startsWith(matrix.os,'windows')

    # - name: Add Windows SDK
    #   shell: cmd
    #   if: startsWith(matrix.os,'windows')
    #   run: |
    #     choco install windows-sdk-8.1

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.9'
    
    - name: Build wheels
      env:
        # Only build on Python 3 and skip 32-bit builds
        CIBW_BUILD: cp3?-*
        CIBW_SKIP: "*-win32 *-manylinux_i686"
        # CIBW_MANYLINUX_X86_64_IMAGE: "dockcross/manylinux2014-x64"
        CIBW_TEST_REQUIRES: "pytest cvxopt"
        CIBW_TEST_COMMAND: "pytest -s {project}/module/tests -k \"not codegen and not mkl\" "
      run: |
        python -m pip install cibuildwheel==1.12.0
        python -m cibuildwheel --output-dir wheelhouse

    # - name: Release to pypi
    #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.pypi_password }}
    #   run: |
    #     python -m pip install --upgrade twine
    #     twine upload wheelhouse/*

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl